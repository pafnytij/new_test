{"name": "Запрос transferbalance: проверка работы: перевод средств с одного аккаунта на два аккаунта, разные валюты.", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('1' == '-3'\n  - -3\n  + 1)", "trace": "create_account = ()\n\n    @allure.title(\"Запрос transferbalance: проверка работы: перевод средств с одного аккаунта на два аккаунта, разные валюты.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_transferbalance_4(create_account):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,105,106. - на 105,106 валюта EUR, на 100 - USD\n                - Пополняем баланс аккаунта 100\n            Тест:\n                Шаг0: вбрасываем котировку EURUSD bid=0.5000, ask=0.5000\n                Шаг1: запрос servertime - параметр from для getbalancesoperations\n                Шаг2: отправляем запрос transferbalance на перевод средств с 100 аккаунта на 105 100$\n                Шаг3: проверка ответа\n                Шаг4: запрос servertime - параметр to для getbalancesoperations\n                Шаг5: Запрос getbalancesoperations для from_logins - 100 аккаунта\n                Шаг6: проверяем данные\n                Шаг7: Запрос getbalancesoperations для receiver_logins - 105 аккаунта\n                Шаг8: проверяем данные\n                Шаг9: Запрос getbalancesoperations для receiver_logins - 106 аккаунта\n                Шаг10: проверяем данные\n            Tear down:\n                - Удаление аккаунта\n        \"\"\"\n        size_0 = {'login': '100', 'balance': '900', 'credit': '0', 'equity': '900', 'margin': '0', 'margin_free': '900',\n                  'success_flag': '1'}\n        size_1 = {'login': '105', 'balance': '100', 'credit': '0', 'equity': '100', 'margin': '0', 'margin_free': '100',\n                  'success_flag': '1'}\n        size_2 = {'login': '106', 'balance': '100', 'credit': '0', 'equity': '100', 'margin': '0', 'margin_free': '100',\n                  'success_flag': '1'}\n    \n        with allure.step('Вбрасываем котировку'):\n            addquote_EURUSD = wik5.request(wik_mt5_addr, 'addquote', symbol='EURUSD', bid=0.5000, ask=0.5)\n        with allure.step('Запрос servertime - параметр from для getbalancesoperations'):\n            servertime_from = wik5.request(wik_mt5_addr, 'servertime')\n            from_1 = int(servertime_from['time'])\n            time.sleep(5)\n        with allure.step('Запрос transferbalance'):\n            transferbalance = wik5.request(wik_mt5_addr, 'transferbalance', from_logins = 100, receiver_logins= \"105;106\", amount=100, from_comment = \"from_comment\", receiver_comment = \"receiver_comment\")\n            # Данные для отчёта: stdout\n            print(\"Ответ запроса transferbalance : \", transferbalance)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == transferbalance[\"result\"] and size_0 == transferbalance[\"size\"][0] and size_1 == transferbalance[\"size\"][1] and size_2 == transferbalance[\"size\"][2]\nE               AssertionError: assert ('1' == '-3'\nE                 - -3\nE                 + 1)\n\nAntelope\\test_transferbalance.py:241: AssertionError"}, "description": "\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,105,106. - на 105,106 валюта EUR, на 100 - USD\n            - Пополняем баланс аккаунта 100\n        Тест:\n            Шаг0: вбрасываем котировку EURUSD bid=0.5000, ask=0.5000\n            Шаг1: запрос servertime - параметр from для getbalancesoperations\n            Шаг2: отправляем запрос transferbalance на перевод средств с 100 аккаунта на 105 100$\n            Шаг3: проверка ответа\n            Шаг4: запрос servertime - параметр to для getbalancesoperations\n            Шаг5: Запрос getbalancesoperations для from_logins - 100 аккаунта\n            Шаг6: проверяем данные\n            Шаг7: Запрос getbalancesoperations для receiver_logins - 105 аккаунта\n            Шаг8: проверяем данные\n            Шаг9: Запрос getbalancesoperations для receiver_logins - 106 аккаунта\n            Шаг10: проверяем данные\n        Tear down:\n            - Удаление аккаунта\n    ", "steps": [{"name": "Вбрасываем котировку", "status": "passed", "start": 1604317807460, "stop": 1604317807462}, {"name": "Запрос servertime - параметр from для getbalancesoperations", "status": "passed", "start": 1604317807462, "stop": 1604317812463}, {"name": "Запрос transferbalance", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('1' == '-3'\n  - -3\n  + 1)\n", "trace": "  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_transferbalance.py\", line 241, in test_transferbalance_4\n    assert \"1\" == transferbalance[\"result\"] and size_0 == transferbalance[\"size\"][0] and size_1 == transferbalance[\"size\"][1] and size_2 == transferbalance[\"size\"][2]\n"}, "steps": [{"name": "Проверка ответа", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('1' == '-3'\n  - -3\n  + 1)\n", "trace": "  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_transferbalance.py\", line 241, in test_transferbalance_4\n    assert \"1\" == transferbalance[\"result\"] and size_0 == transferbalance[\"size\"][0] and size_1 == transferbalance[\"size\"][1] and size_2 == transferbalance[\"size\"][2]\n"}, "start": 1604317812468, "stop": 1604317812468}], "start": 1604317812463, "stop": 1604317812468}], "attachments": [{"name": "stdout", "source": "43608a11-a750-406d-a0c3-eeadfbc3be7f-attachment.txt", "type": "text/plain"}], "start": 1604317807460, "stop": 1604317812469, "uuid": "471b8e2b-6e86-4287-893b-f15be479bccc", "historyId": "abb57a83005db8831bff0e7512bfef3c", "testCaseId": "a630fa6c230606c06cfc028d2f3dd945", "fullName": "Antelope.test_transferbalance#test_transferbalance_4", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Antelope"}, {"name": "suite", "value": "test_transferbalance"}, {"name": "host", "value": "WKST-T-5"}, {"name": "thread", "value": "8604-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Antelope.test_transferbalance"}]}