{"name": "Запрос getordershistory: в перечне несуществующий логин", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('0.7' == '0.7'\n    0.7 and '0.8' == '0.8'\n    0.8 and '0.08' == '0.08'\n    0.08 and '1.8' == '1.8'\n    1.8 and '100' == '100'\n    100 and '200' == '100'\n  - 100\n  + 200)", "trace": "order_history1 = {'from': 1604324158, 'to': 1604324174}\n\n    @allure.title(\"Запрос getordershistory: в перечне несуществующий логин\")\n    @allure.severity('critical')\n    def test_getordershistory_4(order_history1):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты 100, 101\n                - Пополняем баланс\n                - Вбрасываем котировку\n                - Устанавливаем пендинг\n                - Вбрасываем котировку, которой активируем пендинг.\n            Тест:\n                Шаг1: отправляем запрос getordershistory с несуществющим 99 логином в перечне\n                Шаг2: Проверяем ответ\n                Ожидаемый ответ: result=1&reason=&items=10&failed_login=99&size=1127\n                                 100; -------\n                                 &request_id=\n            Tear down:\n                - Удаление аккаунтов\n    \n        \"\"\"\n        with allure.step('Запрос getordershistory с несуществющим 99 логином в перечне'):\n            getordershistory_1 = wik5.request(wik_mt5_addr, 'getordershistory', **{'logins': \"100;101;99\", 'from': order_history1['from'], 'to': order_history1['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос getordershistory: \", getordershistory_1)\n        with allure.step('Проверка result и failed_login'):\n            assert '1' == getordershistory_1['result'] and '99'== getordershistory_1['failed_logins']\n        with allure.step('Проверка ответа'):\n>           assert '0.7' == getordershistory_1['size'][0][\"activation_price\"] and '0.8'== getordershistory_1['size'][0]['price_order'] \\\n               and '0.08'== getordershistory_1['size'][0]['price_sl'] and '1.8'== getordershistory_1['size'][0]['price_tp'] \\\n               and '100' == getordershistory_1['size'][0]['volume_initial'] and '200' == getordershistory_1['size'][1]['volume_initial'] \\\n               and 'EURUSD' == getordershistory_1['size'][0]['symbol'] and '100' == getordershistory_1['size'][0]['login'] \\\n               and '0.7' == getordershistory_1['size'][1][\"activation_price\"] and '0.85' == getordershistory_1['size'][1]['price_order'] \\\n               and '0.07' == getordershistory_1['size'][1]['price_sl'] and '1.9' == getordershistory_1['size'][1]['price_tp']\nE           AssertionError: assert ('0.7' == '0.7'\nE               0.7 and '0.8' == '0.8'\nE               0.8 and '0.08' == '0.08'\nE               0.08 and '1.8' == '1.8'\nE               1.8 and '100' == '100'\nE               100 and '200' == '100'\nE             - 100\nE             + 200)\n\nAntelope\\test_getordershistory.py:162: AssertionError"}, "description": "\n    Описание шагов:\n        Setup: создаём аккаунты 100, 101\n            - Пополняем баланс\n            - Вбрасываем котировку\n            - Устанавливаем пендинг\n            - Вбрасываем котировку, которой активируем пендинг.\n        Тест:\n            Шаг1: отправляем запрос getordershistory с несуществющим 99 логином в перечне\n            Шаг2: Проверяем ответ\n            Ожидаемый ответ: result=1&reason=&items=10&failed_login=99&size=1127\n                             100; -------\n                             &request_id=\n        Tear down:\n            - Удаление аккаунтов\n\n    ", "steps": [{"name": "Запрос getordershistory с несуществющим 99 логином в перечне", "status": "passed", "start": 1604313369157, "stop": 1604313369159}, {"name": "Проверка result и failed_login", "status": "passed", "start": 1604313369159, "stop": 1604313369159}, {"name": "Проверка ответа", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('0.7' == '0.7'\n    0.7 and '0.8' == '0.8'\n    0.8 and '0.08' == '0.08'\n    0.08 and '1.8' == '1.8'\n    1.8 and '100' == '100'\n    100 and '200' == '100'\n  - 100\n  + 200)\n", "trace": "  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_getordershistory.py\", line 162, in test_getordershistory_4\n    assert '0.7' == getordershistory_1['size'][0][\"activation_price\"] and '0.8'== getordershistory_1['size'][0]['price_order'] \\\n"}, "start": 1604313369160, "stop": 1604313369160}], "attachments": [{"name": "stdout", "source": "007e8cd9-e743-4559-af3c-c3423fef4ec6-attachment.txt", "type": "text/plain"}], "start": 1604313369157, "stop": 1604313369161, "uuid": "6184c90b-50f3-4792-bba6-fcbc5ba06163", "historyId": "5b327db4d46f266d4b1ea70315953c54", "testCaseId": "ca2a8842f8829aac8d32ea60d5ab3123", "fullName": "Antelope.test_getordershistory#test_getordershistory_4", "labels": [{"name": "severity", "value": "critical"}, {"name": "parentSuite", "value": "Antelope"}, {"name": "suite", "value": "test_getordershistory"}, {"name": "host", "value": "WKST-T-5"}, {"name": "thread", "value": "13344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Antelope.test_getordershistory"}]}