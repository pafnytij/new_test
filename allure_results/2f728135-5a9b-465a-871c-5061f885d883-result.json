{"name": "Запрос transferbalance: проверка работы: перевод средств с одного аккаунта на один аккаунт, разные валюты.", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('1' == '-3'\n  - -3\n  + 1)", "trace": "create_account = ()\n\n    @allure.title(\"Запрос transferbalance: проверка работы: перевод средств с одного аккаунта на один аккаунт, разные валюты.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_transferbalance_2(create_account):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,105. - на 105 валюта EUR, на 100 - USD\n                - Пополняем баланс аккаунта 100\n            Тест:\n                Шаг0: вбрасываем котировку EURUSD bid=0.5000, ask=0.5000\n                Шаг1: запрос servertime - параметр from для getbalancesoperations\n                Шаг2: отправляем запрос transferbalance на перевод средств с 100 аккаунта на 105 100$\n                Шаг3: проверка ответа\n                Шаг4: запрос servertime - параметр to для getbalancesoperations\n                Шаг5: Запрос getbalancesoperations для from_logins - 100 аккаунта\n                Шаг6: проверяем данные\n                Шаг7: Запрос getbalancesoperations для receiver_logins - 105 аккаунта\n                Шаг8: проверяем данные\n            Tear down:\n                - Удаление аккаунта\n        \"\"\"\n        size_0 = {'login': '100', 'balance': '900', 'credit': '0', 'equity': '900', 'margin': '0', 'margin_free': '900',\n                  'success_flag': '1'}\n        size_1 = {'login': '105', 'balance': '200', 'credit': '0', 'equity': '200', 'margin': '0', 'margin_free': '200',\n                  'success_flag': '1'}\n    \n        with allure.step('Вбрасываем котировку'):\n            addquote_EURUSD = wik5.request(wik_mt5_addr, 'addquote', symbol='EURUSD', bid=0.5000, ask=0.5)\n        with allure.step('Запрос servertime - параметр from для getbalancesoperations'):\n            servertime_from = wik5.request(wik_mt5_addr, 'servertime')\n            from_1 = int(servertime_from['time'])\n            time.sleep(5)\n        with allure.step('Запрос transferbalance'):\n            transferbalance = wik5.request(wik_mt5_addr, 'transferbalance', from_logins = 100, receiver_logins= 105, amount=100, from_comment = \"from_comment\", receiver_comment = \"receiver_comment\")\n            # Данные для отчёта: stdout\n            print(\"Ответ запроса transferbalance : \", transferbalance)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == transferbalance[\"result\"] and size_0 == transferbalance[\"size\"][0] and size_1 == transferbalance[\"size\"][1]\nE               AssertionError: assert ('1' == '-3'\nE                 - -3\nE                 + 1)\n\nAntelope\\test_transferbalance.py:126: AssertionError"}, "description": "\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,105. - на 105 валюта EUR, на 100 - USD\n            - Пополняем баланс аккаунта 100\n        Тест:\n            Шаг0: вбрасываем котировку EURUSD bid=0.5000, ask=0.5000\n            Шаг1: запрос servertime - параметр from для getbalancesoperations\n            Шаг2: отправляем запрос transferbalance на перевод средств с 100 аккаунта на 105 100$\n            Шаг3: проверка ответа\n            Шаг4: запрос servertime - параметр to для getbalancesoperations\n            Шаг5: Запрос getbalancesoperations для from_logins - 100 аккаунта\n            Шаг6: проверяем данные\n            Шаг7: Запрос getbalancesoperations для receiver_logins - 105 аккаунта\n            Шаг8: проверяем данные\n        Tear down:\n            - Удаление аккаунта\n    ", "steps": [{"name": "Вбрасываем котировку", "status": "passed", "start": 1604313545627, "stop": 1604313545629}, {"name": "Запрос servertime - параметр from для getbalancesoperations", "status": "passed", "start": 1604313545629, "stop": 1604313550629}, {"name": "Запрос transferbalance", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('1' == '-3'\n  - -3\n  + 1)\n", "trace": "  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_transferbalance.py\", line 126, in test_transferbalance_2\n    assert \"1\" == transferbalance[\"result\"] and size_0 == transferbalance[\"size\"][0] and size_1 == transferbalance[\"size\"][1]\n"}, "steps": [{"name": "Проверка ответа", "status": "failed", "statusDetails": {"message": "AssertionError: assert ('1' == '-3'\n  - -3\n  + 1)\n", "trace": "  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_transferbalance.py\", line 126, in test_transferbalance_2\n    assert \"1\" == transferbalance[\"result\"] and size_0 == transferbalance[\"size\"][0] and size_1 == transferbalance[\"size\"][1]\n"}, "start": 1604313550635, "stop": 1604313550636}], "start": 1604313550629, "stop": 1604313550636}], "attachments": [{"name": "stdout", "source": "d2bfc896-f215-4b1f-bba4-a692d7f96cec-attachment.txt", "type": "text/plain"}], "start": 1604313545627, "stop": 1604313550636, "uuid": "8c379bd4-bcca-4821-ae45-ebf6ce799d93", "historyId": "3d2f5d3fb08ec7f3c7a204ab40dca077", "testCaseId": "4def414f6e1e6c96ddff73f18b088f02", "fullName": "Antelope.test_transferbalance#test_transferbalance_2", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Antelope"}, {"name": "suite", "value": "test_transferbalance"}, {"name": "host", "value": "WKST-T-5"}, {"name": "thread", "value": "13344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Antelope.test_transferbalance"}]}