{"name": "Запрос transferbalance: проверка работы: перевод средств с одного аккаунта на два аккаунта, одна валюта.", "status": "broken", "statusDetails": {"message": "KeyError: 'profit'", "trace": "create_account = ()\n\n    @allure.title(\"Запрос transferbalance: проверка работы: перевод средств с одного аккаунта на два аккаунта, одна валюта.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_transferbalance_3(create_account):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,103,104.\n                - Пополняем баланс аккаунта 100\n            Тест:\n                Шаг1: запрос servertime - параметр from для getbalancesoperations\n                Шаг2: отправляем запрос transferbalance на перевод средств с 100 аккаунта на 103 и 104 суммарно 100$\n                Шаг3: проверка ответа\n                Шаг4: запрос servertime - параметр to для getbalancesoperations\n                Шаг5: Запрос getbalancesoperations для from_logins - 100 аккаунта\n                Шаг6: проверяем данные\n                Шаг7: Запрос getbalancesoperations для receiver_logins - 103 аккаунта\n                Шаг8: проверяем данные\n                Шаг9: Запрос getbalancesoperations для receiver_logins - 104 аккаунта\n                Шаг10: проверяем данные\n            Tear down:\n                - Удаление аккаунта\n        \"\"\"\n        size_0 = {'login': '100', 'balance': '900', 'credit': '0', 'equity': '900', 'margin': '0', 'margin_free': '900',\n                  'success_flag': '1'}\n        size_1 = {'login': '103', 'balance': '50', 'credit': '0', 'equity': '50', 'margin': '0', 'margin_free': '50',\n                  'success_flag': '1'}\n        size_2 = {'login': '104', 'balance': '50', 'credit': '0', 'equity': '50', 'margin': '0', 'margin_free': '50',\n                  'success_flag': '1'}\n    \n        with allure.step('Запрос servertime - параметр from для getbalancesoperations'):\n            servertime_from = wik5.request(wik_mt5_addr, 'servertime')\n            from_1 = int(servertime_from['time'])\n            time.sleep(5)\n        with allure.step('Запрос transferbalance'):\n            transferbalance = wik5.request(wik_mt5_addr, 'transferbalance', from_logins = 100, receiver_logins= \"103;104\", amount=100, from_comment = \"from_comment\", receiver_comment = \"receiver_comment\")\n            # Данные для отчёта: stdout\n            print(\"Ответ запроса transferbalance : \", transferbalance)\n            with allure.step('Проверка ответа'):\n                assert \"1\" == transferbalance[\"result\"] and size_0 == transferbalance[\"size\"][0] and size_1 == transferbalance[\"size\"][1] and size_2 == transferbalance[\"size\"][2]\n        with allure.step('Запрос servertime - параметр to для getbalancesoperations'):\n            time.sleep(5)\n            servertime_from = wik5.request(wik_mt5_addr, 'servertime')\n            to_1 = int(servertime_from['time'])\n        with allure.step('Запрос getbalancesoperations для from_logins - 100 аккаунта.'):\n            getbalancesoperations = wik5.request(wik_mt5_addr, 'getbalancesoperations', **{'login': 100, 'from':from_1, 'to':to_1})\n            with allure.step('Проверяем ответ'):\n                assert '1' == getbalancesoperations['result'] and \"-100\" == getbalancesoperations['size'][0]['profit']\n        with allure.step('Запрос getbalancesoperations для receiver_logins - 103 аккаунта.'):\n            getbalancesoperations = wik5.request(wik_mt5_addr, 'getbalancesoperations', **{'login': 103, 'from':from_1, 'to':to_1})\n            with allure.step('Проверяем ответ'):\n>               assert '1' == getbalancesoperations['result'] and \"50\" == getbalancesoperations['size'][0]['profit']\nE               KeyError: 'profit'\n\nAntelope\\test_transferbalance.py:192: KeyError"}, "description": "\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,103,104.\n            - Пополняем баланс аккаунта 100\n        Тест:\n            Шаг1: запрос servertime - параметр from для getbalancesoperations\n            Шаг2: отправляем запрос transferbalance на перевод средств с 100 аккаунта на 103 и 104 суммарно 100$\n            Шаг3: проверка ответа\n            Шаг4: запрос servertime - параметр to для getbalancesoperations\n            Шаг5: Запрос getbalancesoperations для from_logins - 100 аккаунта\n            Шаг6: проверяем данные\n            Шаг7: Запрос getbalancesoperations для receiver_logins - 103 аккаунта\n            Шаг8: проверяем данные\n            Шаг9: Запрос getbalancesoperations для receiver_logins - 104 аккаунта\n            Шаг10: проверяем данные\n        Tear down:\n            - Удаление аккаунта\n    ", "steps": [{"name": "Запрос servertime - параметр from для getbalancesoperations", "status": "passed", "start": 1604313555687, "stop": 1604313560688}, {"name": "Запрос transferbalance", "status": "passed", "steps": [{"name": "Проверка ответа", "status": "passed", "start": 1604313560695, "stop": 1604313560695}], "start": 1604313560688, "stop": 1604313560695}, {"name": "Запрос servertime - параметр to для getbalancesoperations", "status": "passed", "start": 1604313560695, "stop": 1604313565695}, {"name": "Запрос getbalancesoperations для from_logins - 100 аккаунта.", "status": "passed", "steps": [{"name": "Проверяем ответ", "status": "passed", "start": 1604313565696, "stop": 1604313565696}], "start": 1604313565695, "stop": 1604313565697}, {"name": "Запрос getbalancesoperations для receiver_logins - 103 аккаунта.", "status": "broken", "statusDetails": {"message": "KeyError: 'profit'\n", "trace": "  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_transferbalance.py\", line 192, in test_transferbalance_3\n    assert '1' == getbalancesoperations['result'] and \"50\" == getbalancesoperations['size'][0]['profit']\n"}, "steps": [{"name": "Проверяем ответ", "status": "broken", "statusDetails": {"message": "KeyError: 'profit'\n", "trace": "  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_transferbalance.py\", line 192, in test_transferbalance_3\n    assert '1' == getbalancesoperations['result'] and \"50\" == getbalancesoperations['size'][0]['profit']\n"}, "start": 1604313565697, "stop": 1604313565697}], "start": 1604313565697, "stop": 1604313565698}], "attachments": [{"name": "stdout", "source": "ff5e1c27-77e0-4e5a-abc0-84815f54df44-attachment.txt", "type": "text/plain"}], "start": 1604313555687, "stop": 1604313565698, "uuid": "4b1aa17f-ae55-4ad3-ab50-662e094d873c", "historyId": "1778d7c7255389a9b24983784d02043c", "testCaseId": "9922688304757b75ced74afbd10ba051", "fullName": "Antelope.test_transferbalance#test_transferbalance_3", "labels": [{"name": "severity", "value": "blocker"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Antelope"}, {"name": "suite", "value": "test_transferbalance"}, {"name": "host", "value": "WKST-T-5"}, {"name": "thread", "value": "13344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Antelope.test_transferbalance"}]}