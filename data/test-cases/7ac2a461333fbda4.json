{"uid":"7ac2a461333fbda4","name":"Запрос getgroup: проверка работы.","fullName":"Antelope.test_getgroup#test_getgroup_1","historyId":"21315c2ed695f7aba7c9486402a09d8e","time":{"start":1604317561119,"stop":1604317561121,"duration":2},"description":"\n    Описание шагов:\n        Setup: Создаём новую группу\n        Тест: отправляем запрос getgroup, запрашиваем информацию по группе.\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: Создаём новую группу\n    Тест: отправляем запрос getgroup, запрашиваем информацию по группе.\n</code></pre>\n","status":"broken","statusMessage":"KeyError: 'currency'","statusTrace":"groups = {'group_name': 'test942N117065'}\n\n    @allure.title(\"Запрос getgroup: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_getgroup_1(groups):\n        \"\"\"\n        Описание шагов:\n            Setup: Создаём новую группу\n            Тест: отправляем запрос getgroup, запрашиваем информацию по группе.\n        \"\"\"\n        name_group = groups['group_name']\n        with allure.step('Запрашиваем данные по группе и проверяем данные'):\n            getgroup = wik5.request(wik_mt5_addr, 'getgroup', name=name_group)\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос getgroup: \", getgroup)\n            with allure.step('Проверка ответа '):\n>               assert \"USD\" == getgroup[\"currency\"] and \"T4B\" == getgroup[\"company\"] and \"100\" == getgroup[\"margin_call\"] and \\\n                    '159' == getgroup[\"default_leverage\"] and \"0\" == getgroup['enable_connections'] and \"5000\" == getgroup['default_deposit'] \\\n                    and \"10\" == getgroup['margin_stopout']\nE               KeyError: 'currency'\n\nAntelope\\test_getgroup.py:49: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"groups","time":{"start":1604317561116,"stop":1604317561118,"duration":2},"status":"passed","steps":[{"name":"Выбор имени для группы","time":{"start":1604317561116,"stop":1604317561116,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Создаем новую группу по сгенерированному имени","time":{"start":1604317561116,"stop":1604317561118,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: Создаём новую группу\n        Тест: отправляем запрос getgroup, запрашиваем информацию по группе.\n    ","status":"broken","statusMessage":"KeyError: 'currency'","statusTrace":"groups = {'group_name': 'test942N117065'}\n\n    @allure.title(\"Запрос getgroup: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_getgroup_1(groups):\n        \"\"\"\n        Описание шагов:\n            Setup: Создаём новую группу\n            Тест: отправляем запрос getgroup, запрашиваем информацию по группе.\n        \"\"\"\n        name_group = groups['group_name']\n        with allure.step('Запрашиваем данные по группе и проверяем данные'):\n            getgroup = wik5.request(wik_mt5_addr, 'getgroup', name=name_group)\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос getgroup: \", getgroup)\n            with allure.step('Проверка ответа '):\n>               assert \"USD\" == getgroup[\"currency\"] and \"T4B\" == getgroup[\"company\"] and \"100\" == getgroup[\"margin_call\"] and \\\n                    '159' == getgroup[\"default_leverage\"] and \"0\" == getgroup['enable_connections'] and \"5000\" == getgroup['default_deposit'] \\\n                    and \"10\" == getgroup['margin_stopout']\nE               KeyError: 'currency'\n\nAntelope\\test_getgroup.py:49: KeyError","steps":[{"name":"Запрашиваем данные по группе и проверяем данные","time":{"start":1604317561119,"stop":1604317561120,"duration":1},"status":"broken","statusMessage":"KeyError: 'currency'\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_getgroup.py\", line 49, in test_getgroup_1\n    assert \"USD\" == getgroup[\"currency\"] and \"T4B\" == getgroup[\"company\"] and \"100\" == getgroup[\"margin_call\"] and \\\n","steps":[{"name":"Проверка ответа ","time":{"start":1604317561120,"stop":1604317561120,"duration":0},"status":"broken","statusMessage":"KeyError: 'currency'\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_getgroup.py\", line 49, in test_getgroup_1\n    assert \"USD\" == getgroup[\"currency\"] and \"T4B\" == getgroup[\"company\"] and \"100\" == getgroup[\"margin_call\"] and \\\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"f37c53a4b9f879cf","name":"stdout","source":"f37c53a4b9f879cf.txt","type":"text/plain","size":146}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"groups::0","time":{"start":1604317561128,"stop":1604317561128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_getgroup"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"8604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_getgroup"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[{"uid":"98f8a22a267657f0","status":"passed","time":{"start":1604313324614,"stop":1604313324616,"duration":2}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"7ac2a461333fbda4.json","parameterValues":[]}