{"uid":"22e9bdca4e5d062","name":"Запрос gettradingvolume: в перечне есть несуществующий логин.","fullName":"Antelope.test_gettradingvolume#test_gettradingvolume_4","historyId":"04ec2c213b9060cfb0c1af623d8a1449","time":{"start":1604313455587,"stop":1604313455590,"duration":3},"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume c несуществующим логином в перечне - 99\n            Шаг2: проверка ответа\n            Ожидаемый ответ: result=1&reason=&users=2&failed_login=99&size=63\n                            login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                            &request_id=\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: создаём аккаунты с логином 100,101.\n        - Пополняем баланс аккаунта\n        - Открываем на нём позицию.\n        - Запрашиваем время сервера для значений from и to\n    Тест:\n        Шаг1: отправляем запрос gettradingvolume c несуществующим логином в перечне - 99\n        Шаг2: проверка ответа\n        Ожидаемый ответ: result=1&amp;reason=&amp;users=2&amp;failed_login=99&amp;size=63\n                        login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                        &amp;request_id=\n    Tear down:\n        - Закрытие сделки\n        - Удаление аккаунта\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])","statusTrace":"open_position = {'from': 1604324239, 'position_1': '102868', 'position_2': '102869', 'to': 1604324265}\n\n    @allure.title(\"Запрос gettradingvolume: в перечне есть несуществующий логин.\")\n    @allure.severity('critical')\n    def test_gettradingvolume_4(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume c несуществующим логином в перечне - 99\n                Шаг2: проверка ответа\n                Ожидаемый ответ: result=1&reason=&users=2&failed_login=99&size=63\n                                login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                                &request_id=\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume c несуществующим логином в перечне'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': \"99;101\", 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"99\" == gettradingvolume['failed_logins']\nE               AssertionError: assert ('1' == '1'\nE                   1 and 2 == 5)\nE                +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n\nAntelope\\test_gettradingvolume.py:147: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"open_position","time":{"start":1604313434558,"stop":1604313455587,"duration":21029},"status":"passed","steps":[{"name":"Создаем аккаунт","time":{"start":1604313434558,"stop":1604313455576,"duration":21018},"status":"passed","steps":[{"name":"Начисление баланса на аккаунт","time":{"start":1604313434562,"stop":1604313434565,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Вбрасываем котировку","time":{"start":1604313434565,"stop":1604313449568,"duration":15003},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение from","time":{"start":1604313449568,"stop":1604313450569,"duration":1001},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрос openorder с cmd = 0","time":{"start":1604313450569,"stop":1604313455576,"duration":5007},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение to","time":{"start":1604313455576,"stop":1604313455576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume c несуществующим логином в перечне - 99\n            Шаг2: проверка ответа\n            Ожидаемый ответ: result=1&reason=&users=2&failed_login=99&size=63\n                            login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                            &request_id=\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])","statusTrace":"open_position = {'from': 1604324239, 'position_1': '102868', 'position_2': '102869', 'to': 1604324265}\n\n    @allure.title(\"Запрос gettradingvolume: в перечне есть несуществующий логин.\")\n    @allure.severity('critical')\n    def test_gettradingvolume_4(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume c несуществующим логином в перечне - 99\n                Шаг2: проверка ответа\n                Ожидаемый ответ: result=1&reason=&users=2&failed_login=99&size=63\n                                login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                                &request_id=\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume c несуществующим логином в перечне'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': \"99;101\", 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"99\" == gettradingvolume['failed_logins']\nE               AssertionError: assert ('1' == '1'\nE                   1 and 2 == 5)\nE                +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n\nAntelope\\test_gettradingvolume.py:147: AssertionError","steps":[{"name":"Запросом gettradingvolume c несуществующим логином в перечне","time":{"start":1604313455587,"stop":1604313455589,"duration":2},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 147, in test_gettradingvolume_4\n    assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"99\" == gettradingvolume['failed_logins']\n","steps":[{"name":"Проверка ответа","time":{"start":1604313455589,"stop":1604313455589,"duration":0},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 147, in test_gettradingvolume_4\n    assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"99\" == gettradingvolume['failed_logins']\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"79c397dfca146847","name":"stdout","source":"79c397dfca146847.txt","type":"text/plain","size":1448}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"open_position::0","time":{"start":1604313455601,"stop":1604313457608,"duration":2007},"status":"passed","steps":[{"name":"Удаление созданных аккаунтов","time":{"start":1604313455601,"stop":1604313457608,"duration":2007},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"critical"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_gettradingvolume"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"13344-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_gettradingvolume"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"22e9bdca4e5d062.json","parameterValues":[]}