{"uid":"92e93297265b47f7","name":"Запрос gettradingvolume: проверка работы - перечень.","fullName":"Antelope.test_gettradingvolume#test_gettradingvolume_2","historyId":"6ee76f33460c5ebf7c39e470e3ae628b","time":{"start":1604317669086,"stop":1604317669119,"duration":33},"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume c значениями  from и to\n            Шаг2: проверка ответа\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: создаём аккаунты с логином 100,101.\n        - Пополняем баланс аккаунта\n        - Открываем на нём позицию.\n        - Запрашиваем время сервера для значений from и to\n    Тест:\n        Шаг1: отправляем запрос gettradingvolume c значениями  from и to\n        Шаг2: проверка ответа\n    Tear down:\n        - Закрытие сделки\n        - Удаление аккаунта\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 4 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'clos...close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])","statusTrace":"open_position = {'from': 1604328453, 'position_1': '103033', 'position_2': '103034', 'to': 1604328479}\n\n    @allure.title(\"Запрос gettradingvolume: проверка работы - перечень.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_gettradingvolume_2(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume c значениями  from и to\n                Шаг2: проверка ответа\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume с перечнем логинов'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': \"100;101\", 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 4 == len(gettradingvolume[\"size\"])\nE               AssertionError: assert ('1' == '1'\nE                   1 and 4 == 11)\nE                +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'clos...close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n\nAntelope\\test_gettradingvolume.py:96: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"open_position","time":{"start":1604317648055,"stop":1604317669086,"duration":21031},"status":"passed","steps":[{"name":"Создаем аккаунт","time":{"start":1604317648055,"stop":1604317669075,"duration":21020},"status":"passed","steps":[{"name":"Начисление баланса на аккаунт","time":{"start":1604317648060,"stop":1604317648063,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Вбрасываем котировку","time":{"start":1604317648063,"stop":1604317663067,"duration":15004},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение from","time":{"start":1604317663067,"stop":1604317664068,"duration":1001},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрос openorder с cmd = 0","time":{"start":1604317664068,"stop":1604317669075,"duration":5007},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение to","time":{"start":1604317669075,"stop":1604317669075,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume c значениями  from и to\n            Шаг2: проверка ответа\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 4 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'clos...close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])","statusTrace":"open_position = {'from': 1604328453, 'position_1': '103033', 'position_2': '103034', 'to': 1604328479}\n\n    @allure.title(\"Запрос gettradingvolume: проверка работы - перечень.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_gettradingvolume_2(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume c значениями  from и to\n                Шаг2: проверка ответа\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume с перечнем логинов'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': \"100;101\", 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 4 == len(gettradingvolume[\"size\"])\nE               AssertionError: assert ('1' == '1'\nE                   1 and 4 == 11)\nE                +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'clos...close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n\nAntelope\\test_gettradingvolume.py:96: AssertionError","steps":[{"name":"Запросом gettradingvolume с перечнем логинов","time":{"start":1604317669086,"stop":1604317669119,"duration":33},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 4 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'clos...close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 96, in test_gettradingvolume_2\n    assert \"1\" == gettradingvolume[\"result\"] and 4 == len(gettradingvolume[\"size\"])\n","steps":[{"name":"Проверка ответа","time":{"start":1604317669118,"stop":1604317669118,"duration":0},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 4 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'clos...close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 96, in test_gettradingvolume_2\n    assert \"1\" == gettradingvolume[\"result\"] and 4 == len(gettradingvolume[\"size\"])\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"8995b0bf33658465","name":"stdout","source":"8995b0bf33658465.txt","type":"text/plain","size":3374}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"open_position::0","time":{"start":1604317669131,"stop":1604317671137,"duration":2006},"status":"passed","steps":[{"name":"Удаление созданных аккаунтов","time":{"start":1604317669131,"stop":1604317671137,"duration":2006},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"blocker"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_gettradingvolume"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"8604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_gettradingvolume"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[{"uid":"8d01e0bca634eb77","status":"failed","statusDetails":"AssertionError: assert ('1' == '1'\n    1 and 4 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'clos...close_time': '-', 'comment': '', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])","time":{"start":1604313432527,"stop":1604313432530,"duration":3}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"92e93297265b47f7.json","parameterValues":[]}