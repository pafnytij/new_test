{"uid":"233c45b43d3bd413","name":"Запрос createaccountinrange: проверка работы.","fullName":"Antelope.test_createaccountinrange#test_createaccountinrange_1","historyId":"c0b9cfef819772ed822418878bce56e4","time":{"start":1604317398000,"stop":1604317398002,"duration":2},"description":"\n    Описание шагов:\n        Setup: создаём 1 аккаунт с логином с 100 по 110.\n        Тест:\n            Шаг1: отправляем запрос getaccountinfo\n            Шаг2: проверяем ответ\n        Tear down: удаление аккаунтов\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: создаём 1 аккаунт с логином с 100 по 110.\n    Тест:\n        Шаг1: отправляем запрос getaccountinfo\n        Шаг2: проверяем ответ\n    Tear down: удаление аккаунтов\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)","statusTrace":"accounts = {'login': '100'}\n\n    @allure.title(\"Запрос createaccountinrange: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_createaccountinrange_1(accounts):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём 1 аккаунт с логином с 100 по 110.\n            Тест:\n                Шаг1: отправляем запрос getaccountinfo\n                Шаг2: проверяем ответ\n            Tear down: удаление аккаунтов\n        \"\"\"\n    \n        with allure.step('Проверка дополнительных параметров'):\n            getaccountinfo_login = wik5.request(wik_mt5_addr, 'getaccountinfo', login=accounts[\"login\"])\n>           assert 'QA'==getaccountinfo_login['name'] and 'email'== getaccountinfo_login['email'] and 'demo\\demoforex'==getaccountinfo_login['group'] \\\n               and '200'==getaccountinfo_login['leverage'] and 'country'==getaccountinfo_login['country'] and 'state'==getaccountinfo_login['state'] \\\n               and 'address'==getaccountinfo_login['address'] and '1'== getaccountinfo_login['enable'] and '1'==getaccountinfo_login['enable_trading'] \\\n               and '1' == getaccountinfo_login['enable_change_password'] and '1' == getaccountinfo_login['enable_trailing_stops'] \\\n               and '1' == getaccountinfo_login['enable_trading_by_expert_adv'] and '1' == getaccountinfo_login['enable_web_api_connection']\nE           AssertionError: assert ('QA' == 'QA'\nE               QA and 'email' == 'email'\nE               email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\nE               demo\\demoforex and '200' == '200'\nE               200 and 'country' == 'country'\nE               country and 'state' == 'state'\nE               state and 'address' == 'address'\nE               address and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '0'\nE             - 0\nE             + 1)\n\nAntelope\\test_createaccountinrange.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"accounts","time":{"start":1604317397994,"stop":1604317397999,"duration":5},"status":"passed","steps":[{"name":"Создаем аккаунт","time":{"start":1604317397995,"stop":1604317397999,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: создаём 1 аккаунт с логином с 100 по 110.\n        Тест:\n            Шаг1: отправляем запрос getaccountinfo\n            Шаг2: проверяем ответ\n        Tear down: удаление аккаунтов\n    ","status":"failed","statusMessage":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)","statusTrace":"accounts = {'login': '100'}\n\n    @allure.title(\"Запрос createaccountinrange: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_createaccountinrange_1(accounts):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём 1 аккаунт с логином с 100 по 110.\n            Тест:\n                Шаг1: отправляем запрос getaccountinfo\n                Шаг2: проверяем ответ\n            Tear down: удаление аккаунтов\n        \"\"\"\n    \n        with allure.step('Проверка дополнительных параметров'):\n            getaccountinfo_login = wik5.request(wik_mt5_addr, 'getaccountinfo', login=accounts[\"login\"])\n>           assert 'QA'==getaccountinfo_login['name'] and 'email'== getaccountinfo_login['email'] and 'demo\\demoforex'==getaccountinfo_login['group'] \\\n               and '200'==getaccountinfo_login['leverage'] and 'country'==getaccountinfo_login['country'] and 'state'==getaccountinfo_login['state'] \\\n               and 'address'==getaccountinfo_login['address'] and '1'== getaccountinfo_login['enable'] and '1'==getaccountinfo_login['enable_trading'] \\\n               and '1' == getaccountinfo_login['enable_change_password'] and '1' == getaccountinfo_login['enable_trailing_stops'] \\\n               and '1' == getaccountinfo_login['enable_trading_by_expert_adv'] and '1' == getaccountinfo_login['enable_web_api_connection']\nE           AssertionError: assert ('QA' == 'QA'\nE               QA and 'email' == 'email'\nE               email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\nE               demo\\demoforex and '200' == '200'\nE               200 and 'country' == 'country'\nE               country and 'state' == 'state'\nE               state and 'address' == 'address'\nE               address and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '0'\nE             - 0\nE             + 1)\n\nAntelope\\test_createaccountinrange.py:40: AssertionError","steps":[{"name":"Проверка дополнительных параметров","time":{"start":1604317398000,"stop":1604317398002,"duration":2},"status":"failed","statusMessage":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_createaccountinrange.py\", line 40, in test_createaccountinrange_1\n    assert 'QA'==getaccountinfo_login['name'] and 'email'== getaccountinfo_login['email'] and 'demo\\demoforex'==getaccountinfo_login['group'] \\\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"accounts::0","time":{"start":1604317398018,"stop":1604317398028,"duration":10},"status":"passed","steps":[{"name":"Удаление созданных аккаунтов","time":{"start":1604317398018,"stop":1604317398028,"duration":10},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"blocker"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_createaccountinrange"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"8604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_createaccountinrange"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[{"uid":"1b82a4b2045a3ae5","status":"failed","statusDetails":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)","time":{"start":1604313160516,"stop":1604313160519,"duration":3}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"233c45b43d3bd413.json","parameterValues":[]}