{"uid":"8209b9e6392f0295","name":"Запрос getbalancesoperations: проверка работы.","fullName":"Antelope.test_getbalancesoperations#test_getbalancesoperations_1","historyId":"93b22b15ed950da522919238cef59453","time":{"start":1604317419702,"stop":1604317419705,"duration":3},"description":"\n    Описание шагов:\n        Setup: создаём аккаунт с логином 100.\n            - Пополняем баланс аккаунта\n            - расчитываем from-to.\n        Тест: отправляем запрос getbalancesoperations\n        Ожидаемый ответ:result=1&reason=&login=100&size=46\n                            1576810;819;1574416902;test_accounthaveorders\n                            &request_id=\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: создаём аккаунт с логином 100.\n        - Пополняем баланс аккаунта\n        - расчитываем from-to.\n    Тест: отправляем запрос getbalancesoperations\n    Ожидаемый ответ:result=1&amp;reason=&amp;login=100&amp;size=46\n                        1576810;819;1574416902;test_accounthaveorders\n                        &amp;request_id=\n    Tear down:\n        - Закрытие сделки\n        - Удаление аккаунта\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and '796' == '1000'\n  - 1000\n  + 796)","statusTrace":"balance_history = {'balance': 796, 'from': 1604328213, 'to': 1604328219}\n\n    @allure.title(\"Запрос getbalancesoperations: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_getbalancesoperations_1(balance_history):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунт с логином 100.\n                - Пополняем баланс аккаунта\n                - расчитываем from-to.\n            Тест: отправляем запрос getbalancesoperations\n            Ожидаемый ответ:result=1&reason=&login=100&size=46\n                                1576810;819;1574416902;test_accounthaveorders\n                                &request_id=\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запрос getbalancesoperations'):\n            getbalancesoperations = wik5.request(wik_mt5_addr,'getbalancesoperations', **{'login': 100, 'from':balance_history['from'], 'to':balance_history['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос getbalancesoperations: \", getbalancesoperations)\n            with allure.step('Проверка ответа '):\n>               assert '1' == getbalancesoperations['result'] and str(balance_history['balance']) == getbalancesoperations['size'][0]['profit']\nE               AssertionError: assert ('1' == '1'\nE                   1 and '796' == '1000'\nE                 - 1000\nE                 + 796)\n\nAntelope\\test_getbalancesoperations.py:53: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"balance_history","time":{"start":1604317412696,"stop":1604317419701,"duration":7005},"status":"passed","steps":[{"name":"Создаем аккаунт","time":{"start":1604317412696,"stop":1604317419701,"duration":7005},"status":"passed","steps":[{"name":"Начисление баланса на аккаунт","time":{"start":1604317412698,"stop":1604317419701,"duration":7003},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Определяем from-to в которые входит операция пополнения баланса","time":{"start":1604317419701,"stop":1604317419701,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: создаём аккаунт с логином 100.\n            - Пополняем баланс аккаунта\n            - расчитываем from-to.\n        Тест: отправляем запрос getbalancesoperations\n        Ожидаемый ответ:result=1&reason=&login=100&size=46\n                            1576810;819;1574416902;test_accounthaveorders\n                            &request_id=\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and '796' == '1000'\n  - 1000\n  + 796)","statusTrace":"balance_history = {'balance': 796, 'from': 1604328213, 'to': 1604328219}\n\n    @allure.title(\"Запрос getbalancesoperations: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_getbalancesoperations_1(balance_history):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунт с логином 100.\n                - Пополняем баланс аккаунта\n                - расчитываем from-to.\n            Тест: отправляем запрос getbalancesoperations\n            Ожидаемый ответ:result=1&reason=&login=100&size=46\n                                1576810;819;1574416902;test_accounthaveorders\n                                &request_id=\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запрос getbalancesoperations'):\n            getbalancesoperations = wik5.request(wik_mt5_addr,'getbalancesoperations', **{'login': 100, 'from':balance_history['from'], 'to':balance_history['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос getbalancesoperations: \", getbalancesoperations)\n            with allure.step('Проверка ответа '):\n>               assert '1' == getbalancesoperations['result'] and str(balance_history['balance']) == getbalancesoperations['size'][0]['profit']\nE               AssertionError: assert ('1' == '1'\nE                   1 and '796' == '1000'\nE                 - 1000\nE                 + 796)\n\nAntelope\\test_getbalancesoperations.py:53: AssertionError","steps":[{"name":"Запрос getbalancesoperations","time":{"start":1604317419702,"stop":1604317419705,"duration":3},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and '796' == '1000'\n  - 1000\n  + 796)\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_getbalancesoperations.py\", line 53, in test_getbalancesoperations_1\n    assert '1' == getbalancesoperations['result'] and str(balance_history['balance']) == getbalancesoperations['size'][0]['profit']\n","steps":[{"name":"Проверка ответа ","time":{"start":1604317419704,"stop":1604317419705,"duration":1},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and '796' == '1000'\n  - 1000\n  + 796)\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_getbalancesoperations.py\", line 53, in test_getbalancesoperations_1\n    assert '1' == getbalancesoperations['result'] and str(balance_history['balance']) == getbalancesoperations['size'][0]['profit']\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"4ed3b389f7a8d4a9","name":"stdout","source":"4ed3b389f7a8d4a9.txt","type":"text/plain","size":859}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"balance_history::0","time":{"start":1604317419714,"stop":1604317419716,"duration":2},"status":"passed","steps":[{"name":"Удаление созданных аккаунтов","time":{"start":1604317419714,"stop":1604317419716,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"blocker"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_getbalancesoperations"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"8604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_getbalancesoperations"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[{"uid":"3b9d0bec229afed0","status":"failed","statusDetails":"AssertionError: assert ('1' == '1'\n    1 and '912' == '1000'\n  - 1000\n  + 912)","time":{"start":1604313182192,"stop":1604313182195,"duration":3}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"8209b9e6392f0295.json","parameterValues":[]}