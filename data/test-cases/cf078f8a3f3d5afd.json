{"uid":"cf078f8a3f3d5afd","name":"Запрос gettradingvolume: проверка работы.","fullName":"Antelope.test_gettradingvolume#test_gettradingvolume_1","historyId":"864066b66e6c3a44febd75900ddbfd1c","time":{"start":1604313409467,"stop":1604313409475,"duration":8},"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume c значениями  from и to в период которых было отрыто 2 позиции\n            Шаг2: проверка ответа\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: создаём аккаунты с логином 100,101.\n        - Пополняем баланс аккаунта\n        - Открываем на нём позицию.\n        - Запрашиваем время сервера для значений from и to\n    Тест:\n        Шаг1: отправляем запрос gettradingvolume c значениями  from и to в период которых было отрыто 2 позиции\n        Шаг2: проверка ответа\n    Tear down:\n        - Закрытие сделки\n        - Удаление аккаунта\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 3 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...t': 'test_accounthavepositions', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])","statusTrace":"open_position = {'from': 1604324193, 'position_1': '102858', 'position_2': '102859', 'to': 1604324219}\n\n    @allure.title(\"Запрос gettradingvolume: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_gettradingvolume_1(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume c значениями  from и to в период которых было отрыто 2 позиции\n                Шаг2: проверка ответа\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume с одним логином'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': 100, 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 3 == len(gettradingvolume[\"size\"])\nE               AssertionError: assert ('1' == '1'\nE                   1 and 3 == 11)\nE                +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...t': 'test_accounthavepositions', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n\nAntelope\\test_gettradingvolume.py:71: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"open_position","time":{"start":1604313388435,"stop":1604313409467,"duration":21032},"status":"passed","steps":[{"name":"Создаем аккаунт","time":{"start":1604313388435,"stop":1604313409456,"duration":21021},"status":"passed","steps":[{"name":"Начисление баланса на аккаунт","time":{"start":1604313388440,"stop":1604313388444,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Вбрасываем котировку","time":{"start":1604313388444,"stop":1604313403448,"duration":15004},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение from","time":{"start":1604313403448,"stop":1604313404449,"duration":1001},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрос openorder с cmd = 0","time":{"start":1604313404449,"stop":1604313409455,"duration":5006},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение to","time":{"start":1604313409455,"stop":1604313409456,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume c значениями  from и to в период которых было отрыто 2 позиции\n            Шаг2: проверка ответа\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 3 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...t': 'test_accounthavepositions', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])","statusTrace":"open_position = {'from': 1604324193, 'position_1': '102858', 'position_2': '102859', 'to': 1604324219}\n\n    @allure.title(\"Запрос gettradingvolume: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_gettradingvolume_1(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume c значениями  from и to в период которых было отрыто 2 позиции\n                Шаг2: проверка ответа\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume с одним логином'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': 100, 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 3 == len(gettradingvolume[\"size\"])\nE               AssertionError: assert ('1' == '1'\nE                   1 and 3 == 11)\nE                +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...t': 'test_accounthavepositions', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n\nAntelope\\test_gettradingvolume.py:71: AssertionError","steps":[{"name":"Запросом gettradingvolume с одним логином","time":{"start":1604313409467,"stop":1604313409475,"duration":8},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 3 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...t': 'test_accounthavepositions', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 71, in test_gettradingvolume_1\n    assert \"1\" == gettradingvolume[\"result\"] and 3 == len(gettradingvolume[\"size\"])\n","steps":[{"name":"Проверка ответа","time":{"start":1604313409474,"stop":1604313409474,"duration":0},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 3 == 11)\n +  where 11 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...t': 'test_accounthavepositions', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, ...])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 71, in test_gettradingvolume_1\n    assert \"1\" == gettradingvolume[\"result\"] and 3 == len(gettradingvolume[\"size\"])\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"ace2b6cc7488ea63","name":"stdout","source":"ace2b6cc7488ea63.txt","type":"text/plain","size":3415}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"open_position::0","time":{"start":1604313409486,"stop":1604313411493,"duration":2007},"status":"passed","steps":[{"name":"Удаление созданных аккаунтов","time":{"start":1604313409486,"stop":1604313411493,"duration":2007},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"blocker"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_gettradingvolume"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"13344-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_gettradingvolume"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["smoke"]},"source":"cf078f8a3f3d5afd.json","parameterValues":[]}