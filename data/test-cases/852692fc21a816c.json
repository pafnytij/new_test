{"uid":"852692fc21a816c","name":"Запрос gettradingvolume: в перечне есть некорректное значение.","fullName":"Antelope.test_gettradingvolume#test_gettradingvolume_6","historyId":"fdc61f55e7ca646376b440409c9c71fc","time":{"start":1604317715239,"stop":1604317715242,"duration":3},"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume с некорректным значением в перечне\n            Шаг2: проверка ответа\n            Ожидаемый ответ: result=1&reason=&users=2&failed_login=asd&size=63\n                            login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                            &request_id=\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: создаём аккаунты с логином 100,101.\n        - Пополняем баланс аккаунта\n        - Открываем на нём позицию.\n        - Запрашиваем время сервера для значений from и to\n    Тест:\n        Шаг1: отправляем запрос gettradingvolume с некорректным значением в перечне\n        Шаг2: проверка ответа\n        Ожидаемый ответ: result=1&amp;reason=&amp;users=2&amp;failed_login=asd&amp;size=63\n                        login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                        &amp;request_id=\n    Tear down:\n        - Закрытие сделки\n        - Удаление аккаунта\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])","statusTrace":"open_position = {'from': 1604328499, 'position_1': '103043', 'position_2': '103044', 'to': 1604328525}\n\n    @allure.title(\"Запрос gettradingvolume: в перечне есть некорректное значение.\")\n    @allure.severity('critical')\n    def test_gettradingvolume_6(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume с некорректным значением в перечне\n                Шаг2: проверка ответа\n                Ожидаемый ответ: result=1&reason=&users=2&failed_login=asd&size=63\n                                login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                                &request_id=\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume с некорректным значением в перечне'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': \"asd;101\", 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"asd\" == gettradingvolume['failed_logins']\nE               AssertionError: assert ('1' == '1'\nE                   1 and 2 == 5)\nE                +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n\nAntelope\\test_gettradingvolume.py:198: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"open_position","time":{"start":1604317694210,"stop":1604317715239,"duration":21029},"status":"passed","steps":[{"name":"Создаем аккаунт","time":{"start":1604317694210,"stop":1604317715229,"duration":21019},"status":"passed","steps":[{"name":"Начисление баланса на аккаунт","time":{"start":1604317694214,"stop":1604317694218,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Вбрасываем котировку","time":{"start":1604317694218,"stop":1604317709222,"duration":15004},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение from","time":{"start":1604317709222,"stop":1604317710222,"duration":1000},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрос openorder с cmd = 0","time":{"start":1604317710222,"stop":1604317715229,"duration":5007},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Запрашиваем время на сервере - значение to","time":{"start":1604317715229,"stop":1604317715229,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: создаём аккаунты с логином 100,101.\n            - Пополняем баланс аккаунта\n            - Открываем на нём позицию.\n            - Запрашиваем время сервера для значений from и to\n        Тест:\n            Шаг1: отправляем запрос gettradingvolume с некорректным значением в перечне\n            Шаг2: проверка ответа\n            Ожидаемый ответ: result=1&reason=&users=2&failed_login=asd&size=63\n                            login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                            &request_id=\n        Tear down:\n            - Закрытие сделки\n            - Удаление аккаунта\n    ","status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])","statusTrace":"open_position = {'from': 1604328499, 'position_1': '103043', 'position_2': '103044', 'to': 1604328525}\n\n    @allure.title(\"Запрос gettradingvolume: в перечне есть некорректное значение.\")\n    @allure.severity('critical')\n    def test_gettradingvolume_6(open_position):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунты с логином 100,101.\n                - Пополняем баланс аккаунта\n                - Открываем на нём позицию.\n                - Запрашиваем время сервера для значений from и to\n            Тест:\n                Шаг1: отправляем запрос gettradingvolume с некорректным значением в перечне\n                Шаг2: проверка ответа\n                Ожидаемый ответ: result=1&reason=&users=2&failed_login=asd&size=63\n                                login;order;symbol;price;close_price(-);profit;volume;open_time;close_time(-);conversation_price(-);comment;commission;commission_agent(-);action;profit_rate;dealer;entry\n                                &request_id=\n            Tear down:\n                - Закрытие сделки\n                - Удаление аккаунта\n        \"\"\"\n        with allure.step('Запросом gettradingvolume с некорректным значением в перечне'):\n            gettradingvolume = wik5.request(wik_mt5_addr, 'gettradingvolume', **{'login': \"asd;101\", 'from': open_position['from'], 'to': open_position['to']})\n            # Данные для отчёта: stdout\n            print(\"Ответ на запрос gettradingvolume: \", gettradingvolume)\n            with allure.step('Проверка ответа'):\n>               assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"asd\" == gettradingvolume['failed_logins']\nE               AssertionError: assert ('1' == '1'\nE                   1 and 2 == 5)\nE                +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n\nAntelope\\test_gettradingvolume.py:198: AssertionError","steps":[{"name":"Запросом gettradingvolume с некорректным значением в перечне","time":{"start":1604317715239,"stop":1604317715241,"duration":2},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 198, in test_gettradingvolume_6\n    assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"asd\" == gettradingvolume['failed_logins']\n","steps":[{"name":"Проверка ответа","time":{"start":1604317715241,"stop":1604317715241,"duration":0},"status":"failed","statusMessage":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_gettradingvolume.py\", line 198, in test_gettradingvolume_6\n    assert \"1\" == gettradingvolume[\"result\"] and 2 == len(gettradingvolume[\"size\"]) and \"asd\" == gettradingvolume['failed_logins']\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"65c08787db15a8db","name":"stdout","source":"65c08787db15a8db.txt","type":"text/plain","size":1449}],"parameters":[],"stepsCount":2,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"open_position::0","time":{"start":1604317715254,"stop":1604317717262,"duration":2008},"status":"passed","steps":[{"name":"Удаление созданных аккаунтов","time":{"start":1604317715254,"stop":1604317717262,"duration":2008},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"critical"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_gettradingvolume"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"8604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_gettradingvolume"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[{"uid":"35bd129a566658f5","status":"failed","statusDetails":"AssertionError: assert ('1' == '1'\n    1 and 2 == 5)\n +  where 5 = len([{'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'action': '1', 'close_price': '-', 'clos...'test_modifyposition', ...}, {'action': '0', 'close_price': '-', 'close_time': '-', 'comment': '', ...}, {'login': ''}])","time":{"start":1604313478646,"stop":1604313478649,"duration":3}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"852692fc21a816c.json","parameterValues":[]}