{"uid":"112eebc29fac287e","name":"Запрос createaccount: проверка работы.","fullName":"Antelope.test_createaccount#test_createaccount_1","historyId":"02cc7f0dcc8341d3e5e1e4d63f5782c6","time":{"start":1604317397846,"stop":1604317397858,"duration":12},"description":"\n    Описание шагов:\n        Setup: создаём аккаунт с логином 100.\n        Тест: отправляем запрос getaccountinfo, запрашиваем информацию по логину 100. Далее сравниваем полученную информацию с помощью 'assert'\n        Tear down: удаление аккаунтов\n    ","descriptionHtml":"<pre><code>Описание шагов:\n    Setup: создаём аккаунт с логином 100.\n    Тест: отправляем запрос getaccountinfo, запрашиваем информацию по логину 100. Далее сравниваем полученную информацию с помощью 'assert'\n    Tear down: удаление аккаунтов\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)","statusTrace":"accounts = ()\n\n    @allure.title(\"Запрос createaccount: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_createaccount_1(accounts):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунт с логином 100.\n            Тест: отправляем запрос getaccountinfo, запрашиваем информацию по логину 100. Далее сравниваем полученную информацию с помощью 'assert'\n            Tear down: удаление аккаунтов\n        \"\"\"\n        with allure.step('Проверка дополнительных параметров'):\n            getaccountinfo_100 = wik5.request(wik_mt5_addr, 'getaccountinfo', login=100)\n            time.sleep(0.01)\n>           assert 'QA'==getaccountinfo_100['name'] and 'email'== getaccountinfo_100['email'] and 'demo\\demoforex'==getaccountinfo_100['group'] \\\n               and '200'==getaccountinfo_100['leverage'] and 'country'==getaccountinfo_100['country'] and 'state'==getaccountinfo_100['state'] \\\n               and 'address'==getaccountinfo_100['address'] and '1'== getaccountinfo_100['enable'] and '1'==getaccountinfo_100['enable_trading'] \\\n               and '1' == getaccountinfo_100['enable_change_password'] and '1' == getaccountinfo_100['enable_trailing_stops'] \\\n               and '1' == getaccountinfo_100['enable_trading_by_expert_adv'] and '1' == getaccountinfo_100['enable_web_api_connection']\nE           AssertionError: assert ('QA' == 'QA'\nE               QA and 'email' == 'email'\nE               email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\nE               demo\\demoforex and '200' == '200'\nE               200 and 'country' == 'country'\nE               country and 'state' == 'state'\nE               state and 'address' == 'address'\nE               address and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '0'\nE             - 0\nE             + 1)\n\nAntelope\\test_createaccount.py:37: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"accounts","time":{"start":1604317397832,"stop":1604317397846,"duration":14},"status":"passed","steps":[{"name":"Создаем аккаунт","time":{"start":1604317397832,"stop":1604317397835,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    Описание шагов:\n        Setup: создаём аккаунт с логином 100.\n        Тест: отправляем запрос getaccountinfo, запрашиваем информацию по логину 100. Далее сравниваем полученную информацию с помощью 'assert'\n        Tear down: удаление аккаунтов\n    ","status":"failed","statusMessage":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)","statusTrace":"accounts = ()\n\n    @allure.title(\"Запрос createaccount: проверка работы.\")\n    @allure.severity('blocker')\n    @pytest.mark.smoke\n    def test_createaccount_1(accounts):\n        \"\"\"\n        Описание шагов:\n            Setup: создаём аккаунт с логином 100.\n            Тест: отправляем запрос getaccountinfo, запрашиваем информацию по логину 100. Далее сравниваем полученную информацию с помощью 'assert'\n            Tear down: удаление аккаунтов\n        \"\"\"\n        with allure.step('Проверка дополнительных параметров'):\n            getaccountinfo_100 = wik5.request(wik_mt5_addr, 'getaccountinfo', login=100)\n            time.sleep(0.01)\n>           assert 'QA'==getaccountinfo_100['name'] and 'email'== getaccountinfo_100['email'] and 'demo\\demoforex'==getaccountinfo_100['group'] \\\n               and '200'==getaccountinfo_100['leverage'] and 'country'==getaccountinfo_100['country'] and 'state'==getaccountinfo_100['state'] \\\n               and 'address'==getaccountinfo_100['address'] and '1'== getaccountinfo_100['enable'] and '1'==getaccountinfo_100['enable_trading'] \\\n               and '1' == getaccountinfo_100['enable_change_password'] and '1' == getaccountinfo_100['enable_trailing_stops'] \\\n               and '1' == getaccountinfo_100['enable_trading_by_expert_adv'] and '1' == getaccountinfo_100['enable_web_api_connection']\nE           AssertionError: assert ('QA' == 'QA'\nE               QA and 'email' == 'email'\nE               email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\nE               demo\\demoforex and '200' == '200'\nE               200 and 'country' == 'country'\nE               country and 'state' == 'state'\nE               state and 'address' == 'address'\nE               address and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '1'\nE               1 and '1' == '0'\nE             - 0\nE             + 1)\n\nAntelope\\test_createaccount.py:37: AssertionError","steps":[{"name":"Проверка дополнительных параметров","time":{"start":1604317397846,"stop":1604317397858,"duration":12},"status":"failed","statusMessage":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)\n","statusTrace":"  File \"C:\\Users\\Pavel Starovoitov.TFBDEV\\PycharmProjects\\wikmt5_antelope\\Antelope\\test_createaccount.py\", line 37, in test_createaccount_1\n    assert 'QA'==getaccountinfo_100['name'] and 'email'== getaccountinfo_100['email'] and 'demo\\demoforex'==getaccountinfo_100['group'] \\\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"accounts::0","time":{"start":1604317397871,"stop":1604317397873,"duration":2},"status":"passed","steps":[{"name":"Удаление созданных аккаунтов","time":{"start":1604317397871,"stop":1604317397873,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"severity","value":"blocker"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"Antelope"},{"name":"suite","value":"test_createaccount"},{"name":"host","value":"WKST-T-5"},{"name":"thread","value":"8604-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Antelope.test_createaccount"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[{"uid":"e3a2a49f0ac47a6b","status":"failed","statusDetails":"AssertionError: assert ('QA' == 'QA'\n    QA and 'email' == 'email'\n    email and 'demo\\\\demoforex' == 'demo\\\\demoforex'\n    demo\\demoforex and '200' == '200'\n    200 and 'country' == 'country'\n    country and 'state' == 'state'\n    state and 'address' == 'address'\n    address and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '1'\n    1 and '1' == '0'\n  - 0\n  + 1)","time":{"start":1604313160364,"stop":1604313160377,"duration":13}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"112eebc29fac287e.json","parameterValues":[]}